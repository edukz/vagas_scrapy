{
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(source:*)",
      "Bash(pip3 install:*)",
      "Bash(git rm:*)",
      "Bash(mv:*)",
      "Bash(git add:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(find:*)",
      "Bash(git restore:*)",
      "Bash(playwright install)",
      "Bash(mkdir:*)",
      "Bash(true)",
      "Bash(touch:*)",
      "Bash(git config:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(git commit:*)",
      "Bash(timeout 10 python3 main.py)",
      "Bash(# Mover arquivos importantes dos diretórios de teste temporários antes de removê-los\nif [ -d \"test_logs\" ] && [ -n \"$(ls -A test_logs 2>/dev/null)\" ]; then\n    cp -r test_logs/* tests/temp_logs/ 2>/dev/null || true\nfi\n\nif [ -d \"test_metrics\" ] && [ -n \"$(ls -A test_metrics 2>/dev/null)\" ]; then\n    cp -r test_metrics/* tests/temp_data/ 2>/dev/null || true\nfi\n\necho \"Arquivos importantes copiados para tests/\")",
      "Bash(# Remover todas as pastas temporárias de teste\nrm -rf test_alerts_config test_basic test_concurrent test_dashboard test_escalation test_grouping test_integration test_logs test_metrics test_notifications test_performance test_resolution\n\necho \"✅ Pastas temporárias de teste removidas\")",
      "Bash(timeout 30 python3:*)",
      "Bash(chmod:*)",
      "Bash(./setup_api.sh:*)",
      "Bash(bash:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker compose:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(./venv/bin/python -m pip install:*)",
      "Bash(/mnt/c/Users/edukz/anaconda3/Scripts/pip.exe install playwright beautifulsoup4 requests aiofiles)",
      "Bash(/mnt/c/Users/edukz/anaconda3/Scripts/playwright.exe install)",
      "Bash(/mnt/c/Users/edukz/anaconda3/python.exe -c \"import playwright; print('Playwright instalado com sucesso!')\")",
      "Bash(/mnt/c/Users/edukz/anaconda3/Scripts/pip.exe install lxml selenium)",
      "Bash(if [ -d monitoring ])",
      "Bash(then mv monitoring/* deployments/monitoring/)",
      "Bash(fi)",
      "Bash(tree:*)",
      "Bash(sed:*)",
      "Bash(tesseract:*)",
      "Bash(timeout:*)"
    ],
    "deny": []
  }
}